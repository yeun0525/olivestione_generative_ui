@use 'vars' as *;
@use 'sass:math';

// flex
@mixin set-flex($f: null, $dir: row, $j: null, $a: null) {
	@if $f != null {
		@if $f {
			flex-shrink: 0;
			flex-grow: 0;
		} @else {
			flex-shrink: 1;
			flex-grow: 1;
		}
	} @else {
		display: flex;
		@if $dir {
			flex-direction: $dir;
		}
		@if $j {
			justify-content: $j;
		}
		@if $a {
			align-items: $a;
		}
	}
}

// Ellipsis
@mixin ellipsis($l: 1, $lh: null, $p: 0) {
	overflow: hidden;
	text-overflow: ellipsis;
	@if $l == 1 {
		white-space: nowrap;
	}
	@if $l > 1 {
		display: -webkit-box;
		-webkit-box-orient: vertical;
		-webkit-line-clamp: $l;
		@if $lh != null {
			max-height: #{$lh * $l + ($p * 2)}px;
			line-height: #{$lh}px;
		}
	}
}

// RESET
@mixin reset($type) {
	@if $type == text {
		color: rgba($color: $hexWhite, $alpha: 0);
		font-size: 0;
	}
	@if $type == bg {
		background-repeat: no-repeat;
		background-position: center center;
		background-size: contain;
	}
	@if $type == icon {
		@include reset(bg);
		@include reset(text);
	}
	@if $type == pseudo {
		display: block;
		content: '';
	}
}

// IMG
@function url-img($type, $name, $cate: null, $value: svg) {
	@if $cate != null {
		$filename: $name + '-' + $cate + '.' + $value;
		$url: '../image/' + $type + '/' + $filename;
		@return $url;
	} @else {
		$filename: $name + '.' + $value;
		$url: '../image/' + $type + '/' + $filename;
		@return $url;
	}
}
